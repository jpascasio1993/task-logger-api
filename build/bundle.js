(()=>{"use strict";var e={180:e=>{e.exports=require("regenerator-runtime/runtime")},674:(e,r,o)=>{const n=require("express");var t=o.n(n);const s=require("cors");var c=o.n(s);const u=require("helmet");var i=o.n(u);const a=require("mongoose");var p=o.n(a);const v=t()();v.use(i()()),v.use(c()()),v.use(t().json()),v.get("/",((e,r)=>{r.send("âœ… MongoDB connected successfully!")})),p().connect("mongodb+srv://jpascasio1993dev:4oTpMjAzOs2TrwIg@free-cluster-0.u2pjyxz.mongodb.net/").then((()=>{v.listen(3e3,(()=>{console.log("Server is running on port 3000")})).on("error",(e=>{console.error("[Server] Error starting server: ",e),process.exit(1)}))})).catch((e=>{console.error("[MongoDB] Error connecting to MongoDB: ",e),process.exit(1)}))}},r={};function o(n){var t=r[n];if(void 0!==t)return t.exports;var s=r[n]={exports:{}};return e[n](s,s.exports,o),s.exports}o.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return o.d(r,{a:r}),r},o.d=(e,r)=>{for(var n in r)o.o(r,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),o(180),o(674)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJrQ0FBQUEsRUFBT0MsUUFBVUMsUUFBUSw4QixnQkNBekIsTUFBTSxFQUErQkEsUUFBUSxXLGFDQTdDLE1BQU0sRUFBK0JBLFFBQVEsUSxhQ0E3QyxNQUFNLEVBQStCQSxRQUFRLFUsYUNBN0MsTUFBTSxFQUErQkEsUUFBUSxZLGFDSzdDLE1BQU1DLEVBQVMsTUFFZkEsRUFBT0MsSUFBSSxPQUNYRCxFQUFPQyxJQUFJLE9BQ1hELEVBQU9DLElBQUksWUFFWEQsRUFBT0UsSUFBSSxLQUFLLENBQUNDLEVBQU1DLEtBQ25CQSxFQUFJQyxLQUFLLG9DQUFvQyxJQUdqRCxZQUFpQix1RkFBd0JDLE1BQUssS0FDMUNOLEVBQU9PLE9BQU8sS0FBTSxLQUNoQkMsUUFBUUMsSUFBSSxpQ0FBaUMsSUFDOUNDLEdBQUcsU0FBVUMsSUFDWkgsUUFBUUksTUFBTSxtQ0FBb0NELEdBQ2xERSxRQUFRQyxLQUFLLEVBQUUsR0FDakIsSUFDSEMsT0FBT0osSUFDTkgsUUFBUUksTUFBTSwwQ0FBMkNELEdBQ3pERSxRQUFRQyxLQUFLLEVBQUUsRyxHQ3ZCZkUsRUFBMkIsQ0FBQyxFQUdoQyxTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhckIsUUFHckIsSUFBSUQsRUFBU21CLEVBQXlCRSxHQUFZLENBR2pEcEIsUUFBUyxDQUFDLEdBT1gsT0FIQXVCLEVBQW9CSCxHQUFVckIsRUFBUUEsRUFBT0MsUUFBU21CLEdBRy9DcEIsRUFBT0MsT0FDZixDQ3JCQW1CLEVBQW9CSyxFQUFLekIsSUFDeEIsSUFBSTBCLEVBQVMxQixHQUFVQSxFQUFPMkIsV0FDN0IsSUFBTzNCLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBb0IsRUFBb0JRLEVBQUVGLEVBQVEsQ0FBRUcsRUFBR0gsSUFDNUJBLENBQU0sRUNMZE4sRUFBb0JRLEVBQUksQ0FBQzNCLEVBQVM2QixLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hWLEVBQW9CWSxFQUFFRixFQUFZQyxLQUFTWCxFQUFvQlksRUFBRS9CLEVBQVM4QixJQUM1RUUsT0FBT0MsZUFBZWpDLEVBQVM4QixFQUFLLENBQUVJLFlBQVksRUFBTTlCLElBQUt5QixFQUFXQyxJQUUxRSxFQ05EWCxFQUFvQlksRUFBSSxDQUFDSSxFQUFLQyxJQUFVSixPQUFPSyxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxHQ0dsRmpCLEVBQW9CLEtBQ01BLEVBQW9CLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXNrX2xvZ2dpbmdfc3lzdGVtX2JhY2tlbmQvZXh0ZXJuYWwgY29tbW9uanMgXCJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWVcIiIsIndlYnBhY2s6Ly90YXNrX2xvZ2dpbmdfc3lzdGVtX2JhY2tlbmQvZXh0ZXJuYWwgY29tbW9uanMgXCJleHByZXNzXCIiLCJ3ZWJwYWNrOi8vdGFza19sb2dnaW5nX3N5c3RlbV9iYWNrZW5kL2V4dGVybmFsIGNvbW1vbmpzIFwiY29yc1wiIiwid2VicGFjazovL3Rhc2tfbG9nZ2luZ19zeXN0ZW1fYmFja2VuZC9leHRlcm5hbCBjb21tb25qcyBcImhlbG1ldFwiIiwid2VicGFjazovL3Rhc2tfbG9nZ2luZ19zeXN0ZW1fYmFja2VuZC9leHRlcm5hbCBjb21tb25qcyBcIm1vbmdvb3NlXCIiLCJ3ZWJwYWNrOi8vdGFza19sb2dnaW5nX3N5c3RlbV9iYWNrZW5kLy4vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vdGFza19sb2dnaW5nX3N5c3RlbV9iYWNrZW5kL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3Rhc2tfbG9nZ2luZ19zeXN0ZW1fYmFja2VuZC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90YXNrX2xvZ2dpbmdfc3lzdGVtX2JhY2tlbmQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3Rhc2tfbG9nZ2luZ19zeXN0ZW1fYmFja2VuZC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3Rhc2tfbG9nZ2luZ19zeXN0ZW1fYmFja2VuZC93ZWJwYWNrL3N0YXJ0dXAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lXCIpOyIsImNvbnN0IF9fV0VCUEFDS19OQU1FU1BBQ0VfT0JKRUNUX18gPSByZXF1aXJlKFwiZXhwcmVzc1wiKTsiLCJjb25zdCBfX1dFQlBBQ0tfTkFNRVNQQUNFX09CSkVDVF9fID0gcmVxdWlyZShcImNvcnNcIik7IiwiY29uc3QgX19XRUJQQUNLX05BTUVTUEFDRV9PQkpFQ1RfXyA9IHJlcXVpcmUoXCJoZWxtZXRcIik7IiwiY29uc3QgX19XRUJQQUNLX05BTUVTUEFDRV9PQkpFQ1RfXyA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTsiLCJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IGhlbG1ldCBmcm9tICdoZWxtZXQnO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcblxuY29uc3Qgc2VydmVyID0gZXhwcmVzcygpO1xuXG5zZXJ2ZXIudXNlKGhlbG1ldCgpKTtcbnNlcnZlci51c2UoY29ycygpKTtcbnNlcnZlci51c2UoZXhwcmVzcy5qc29uKCkpO1xuXG5zZXJ2ZXIuZ2V0KCcvJywgKF9yZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zZW5kKCfinIUgTW9uZ29EQiBjb25uZWN0ZWQgc3VjY2Vzc2Z1bGx5IScpO1xuICB9KTtcblxubW9uZ29vc2UuY29ubmVjdChwcm9jZXNzLmVudi5NT05HT19VUkkhKS50aGVuKCgpID0+IHtcbiAgICBzZXJ2ZXIubGlzdGVuKDMwMDAsICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ1NlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgMzAwMCcpO1xuICAgIH0pLm9uKCdlcnJvcicsIChlcnI6IEVycm9yKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1tTZXJ2ZXJdIEVycm9yIHN0YXJ0aW5nIHNlcnZlcjogJywgZXJyKTtcbiAgICAgICAgcHJvY2Vzcy5leGl0KDEpO1xuICAgIH0pO1xufSkuY2F0Y2goKGVycjogRXJyb3IpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCdbTW9uZ29EQl0gRXJyb3IgY29ubmVjdGluZyB0byBNb25nb0RCOiAnLCBlcnIpO1xuICAgIHByb2Nlc3MuZXhpdCgxKTtcbn0pO1xuXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSB1c2VkICdtb2R1bGUnIHNvIGl0IGNhbid0IGJlIGlubGluZWRcbl9fd2VicGFja19yZXF1aXJlX18oMTgwKTtcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2NzQpO1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIiwic2VydmVyIiwidXNlIiwiZ2V0IiwiX3JlcSIsInJlcyIsInNlbmQiLCJ0aGVuIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsIm9uIiwiZXJyIiwiZXJyb3IiLCJwcm9jZXNzIiwiZXhpdCIsImNhdGNoIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiXSwic291cmNlUm9vdCI6IiJ9